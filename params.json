{"body":"# createsend [![Build Status](https://secure.travis-ci.org/campaignmonitor/createsend-php.png)][travis]\r\nA php library which implements the complete functionality of the Campaign Monitor API.\r\n\r\n[travis]: http://travis-ci.org/campaignmonitor/createsend-php\r\n\r\n## Installation\r\n\r\nIf you use [Composer](http://getcomposer.org/), you can add [campaignmonitor/createsend-php](https://packagist.org/packages/campaignmonitor/createsend-php) to your `composer.json` file:\r\n\r\n    {\r\n        \"require\": {\r\n            \"campaignmonitor/createsend-php\": \"{version}\"\r\n        }\r\n    }\r\n\r\nOtherwise you can simply [download](https://github.com/campaignmonitor/createsend-php/tags) the library and include it in your project.\r\n\r\nAfter you have installed the library, simply include the relevant API class e.g\r\n\r\n    require_once 'csrest_campaigns.php'\r\n\r\n## Examples\r\n\r\nSamples for creating or accessing all resources can be found in the samples directory.\r\nThese samples can be used as the basis for your own application and provide an outline of \r\nthe expected inputs for each API call. \r\n\r\nFurther documentation of the inputs and outputs of each call can be found in the \r\ndocumentation in each of the csrest_*.php files or simply by examining the \r\nvar_dump results in each of the provided samples.\r\n\r\n## Contributing\r\n1. Fork the repository\r\n2. Make your changes, including tests for your changes.\r\n3. Ensure that the build passes, by running:\r\n    \r\n    ```\r\n    composer install --dev\r\n    cd tests && php all_tests.php && cd ..\r\n    ```\r\n\r\n    CI runs on: `5.3` and `5.4`.\r\n\r\n4. It should go without saying, but do not increment the version number in your commits.\r\n5. Submit a pull request.\r\n","name":"createsend-php","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A PHP library for the Campaign Monitor API"}